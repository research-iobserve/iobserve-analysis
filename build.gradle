buildscript { 
	
	// this block can be used later to add custom plug-ins for gradle
	// just an example for now
	
    repositories {
        //jcenter()
    }
    dependencies {
        //classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:0.4.1"
    }
}

// checking the presence of an Eclipse API baseline repositorsy
if (project.properties['api.baseline'] == null || project.properties['api.baseline'].isEmpty()) {
	System.err.println("Cannot find an Eclipse API baseline repository")
	System.err.println("Create file iobserve-analysis/gradle.properties if missing.")
	System.err.println("Add the property api.baseline=path to the repository")
	System.err.println("Use / for path separation")
	System.err.println("The repository can be found at git@github.com:research-iobserve/iobserve-repository.git")
} else {
	println "iObserve API baseline repository is at: " + project.properties['api.baseline']
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'eclipse'
    apply plugin: 'checkstyle'

    version = '0.0.2-SNAPSHOT'
    group = 'org.iobserve'
    
    checkstyle {
        configFile = rootProject.file('iobserve-checkstyle-rules.xml')
        configProperties = [config_loc: "${rootDir}"]
    }
    
    tasks.withType(Checkstyle) {
	    reports {
	        xml.enabled true
	    }
	}
    
    ext {
        appName = "org.iobserve"
    }
    sourceCompatibility = 1.8
    
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {url "https://repo.eclipse.org/content/groups/releases/" }
        maven {url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven {url "https://oss.sonatype.org/content/repositories/releases/" }
	maven {url "https://mvnrepository.com/artifact/org.eclipse.emf/org.eclipse.emf.ecore" }
	maven {url "https://oss.sonatype.org/content/groups/public/"}
	maven {url "https://jitpack.io"}
	maven {url "https://mvnrepository.com/artifact/org.eclipse/ocl" }
	maven {url "http://mvnrepository.com/artifact/org.eclipselabs/cdo.p2"}
	maven {url "http://mvnrepository.com/artifact/org.eclipselabs/cdo"}
	maven {url "http://mvnrepository.com/artifact/org.eclipselabs/cdo-maven"}
	maven {url "http://mvnrepository.com/artifact/commons-daemon/commons-daemon"}
	maven {url "http://mvnrepository.com/artifact/commons-cli/commons-cli"}
	maven {url "https://mvnrepository.com/artifact/org.antlr/antlr-runtime"}
	maven {url project.properties['api.baseline']}
    }
    
    eclipse {
	    classpath {
	       downloadSources=true
	       downloadJavadoc=true
	    }
	}
}

