/////////////////////////////
// WRAP MAVEN DEPS TO OSGI //
/////////////////////////////

// find the paths of all actual projects
def pluginPaths = rootProject.subprojects
	.collect { ':' + it.name }
	.grep { it.startsWith( ':' + pluginPrefix) }

// the target platform will contain every jar
// which is added to the platform config, as
// well as all of its transitives, with OSGi
// metadata created automatically by bnd as
// required.
configurations {
	platform
	// no need to add the plugins from p2
	all*.exclude group: 'eclipse-deps'
}
for (pluginPath in pluginPaths) {
	evaluationDependsOn(pluginPath)
	dependencies.add('platform', project(pluginPath))
}

// Download from eclipse and put it into maven
apply plugin: 'org.standardout.bnd-platform'
platform {
	determineImportVersions = true
	importVersionStrategy = MAJOR
	useBndHashQualifiers = false
	fetchSources = false
}
// don't let stale bundles lay around
bundles.dependsOn(clean)
// bundles relies on the underlying jars being built
configurations.collectMany { it.allDependencies }.findAll { it instanceof ProjectDependency }.each {
	bundles.dependsOn(it.dependencyProject.path + ':jar')
}

// put the bundle task into the output of `gradle tasks` since Gradle 3.3 includes only tasks with a group
bundles.group = 'Build'
bundles.description = 'Converts maven dependencies into OSGi bundles.'

dependencies {
	// Gradle kicks out all but the newest version of a dependency. Specify the older version(s) here if
	// multiple versions of a dependency are required and specified in ../build.gradle
    platformaux 'extra:org.antlr.runtime:3.2.0.v201101311130'
    platformaux 'extra:org.apache.batik.css:1.7.0.v201011041433'
	platformaux 'extra:org.apache.batik.util:1.7.0.v201011041433'
    platformaux 'extra:org.apache.batik.util.gui:1.7.0.v200903091627'
	
	// RxJava wants sun.misc
	// platformaux 'com.diffplug.osgi:com.diffplug.osgi.extension.sun.misc:0.0.0'
}
